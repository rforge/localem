% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/excProbFun.R
\name{excProb}
\alias{excProb}
\title{Computes the exceedance probabilities}
\usage{
excProb(lemObjects, threshold = 1, Nboot = 100, bw, fact = 1,
  ncores = 1, iterations = list(tol = 1e-05, maxIter = 1000, gpu =
  FALSE), path = getwd(), filename = "lemExcProb.grd",
  verbose = FALSE)

excProb(lemObjects, threshold = 1, Nboot = 100, bw, fact = 1,
  ncores = 1, iterations = list(tol = 1e-05, maxIter = 1000, gpu =
  FALSE), path = getwd(), filename = "lemExcProb.grd",
  verbose = FALSE)
}
\arguments{
\item{lemObjects}{List of arrays for the smoothing matrix, and raster stacks for the partition, smoothed offsets and risk estimation}

\item{threshold}{Vector of risk thresholds}

\item{Nboot}{Number of bootstraps}

\item{bw}{Bandwidth for smoothing bootstrap samples}

\item{fact}{Aggregation factor prior to 'final step' smoothing (set to zero to skip final step)}

\item{ncores}{Number of cores/threads for parallel processing}

\item{iterations}{List of convergence tolerance, number of iterations, and use of gpuR package for running local-EM recursions}

\item{path}{Folder for storing rasters}

\item{filename}{Filename (must have .grd extension) of the exceedance probabilities}

\item{verbose}{Verbose output}

\item{est}{raster of risk surfaces to assess, defaults to layers of \code{lemObjects$riskEst} having the specified bandwidth.}

\item{est}{Estimated risk, defaults to \code{lemObjects$riskEst}}

\item{lemObjects}{List of arrays for the smoothing matrix, and raster stacks for the partition, smoothed offsets and risk estimation}

\item{threshold}{Vector of risk thresholds}

\item{Nboot}{Number of bootstraps}

\item{bw}{Bandwidth for smoothing bootstrap samples}

\item{fact}{Aggregation factor prior to 'final step' smoothing (set to zero to skip final step)}

\item{ncores}{Number of cores/threads for parallel processing}

\item{iterations}{List of convergence tolerance, number of iterations, and use of gpuR package for running local-EM recursions}

\item{path}{Folder for storing rasters}

\item{filename}{Filename (must have .grd extension) of the exceedance probabilities}

\item{verbose}{Verbose output}
}
\value{
The \code{excProb} function returns a raster brick of exceedance probabilities of input risk thresholds.

The \code{excProb} function returns a raster brick of exceedance probabilities of input risk thresholds.
}
\description{
The \code{excProb} function first bootstraps cases with the input risk thresholds and expected counts from the rasterization of the spatial polygons of population data, and then, computes the exceedance probabilities with the same bandwidth as the risk estimation.

The \code{excProb} function first bootstraps cases with the input risk thresholds and expected counts from the rasterization of the spatial polygons of population data, and then, computes the exceedance probabilities with the same bandwidth as the risk estimation.
}
\details{
After using the \code{excProb} function, the exceedance probabilities are computed on a fine resolution based on the rasterization of the spatial polygons of population data.

After using the \code{excProb} function, the exceedance probabilities are computed on a fine resolution based on the rasterization of the spatial polygons of population data.
}
\examples{
\dontrun{
# case and population data
data('kentuckyCounty')
data('kentuckyTract')

# parameters
ncores = 2
cellsCoarse = 8
cellsFine = 100
bw = c(10, 15, 17.5, 20) * 1000
path = 'example'
threshold = c(1, 1.1, 1.25, 1.5)
Nboot = 100

# rasters of case and population data
lemRaster = rasterPartition(polyCoarse = kentuckyCounty,
							polyFine = kentuckyTract,
							cellsCoarse = cellsCoarse,
							cellsFine = cellsFine,
							bw = bw,
							ncores = ncores,
							path = path,
							idFile = 'lemId.grd',
							offsetFile = 'lemOffsets.grd',
							verbose = TRUE)

# smoothing matrix
lemSmoothMat = smoothingMatrix(rasterObjects = lemRaster,
								ncores = ncores,
								path = path,
								filename = 'lemSmoothMat.grd',
								verbose = TRUE)

# risk estimation for bandwidth of 10km
lemRisk = riskEst(cases = kentuckyCounty[,c('id','count')],
					lemObjects = lemSmoothMat,
					bw = bw[1],
					fact = 1,
					ncores = ncores,
					path = path,
					filename = 'lemRisk.grd',
					verbose = TRUE)

# exceedance probabilities for bandwidth of 10km
lemExcProb = excProb(lemObjects = lemRisk,
				  	threshold = threshold,
				  	Nboot = Nboot,
					bw = bw[1],
					fact = 1,
             		ncores = ncores,
             		path = path,
				  	filename = 'lemExcProb.grd',
             		verbose = TRUE)

# plot exceedance probabilities
pCol = mapmisc::colourScale(lemExcProb$excProb,
					breaks = c(0,0.2,0.8,0.95,1),
					style = 'fixed', dec = 2,
					col = c('green','yellow','orange','red'))

par(mfrow = c(2,2), mar = c(0.5,0.5,3,0.5))
for(inT in 1:length(threshold)) {
	plot(lemExcProb$excProb[[inT]],
		main = paste('Exc Prob, t=', threshold[inT], ' (bw=10km)', sep = ''),
		col = pCol$col, breaks = pCol$breaks,
		axes = FALSE, box = FALSE, legend = FALSE,
		add = FALSE)
}
mapmisc::legendBreaks('topright', pCol)
}

\dontrun{
# case and population data
data('kentuckyCounty')
data('kentuckyTract')

# parameters
ncores = 2
cellsCoarse = 8
cellsFine = 100
bw = c(10, 15, 17.5, 20) * 1000
path = 'example'
threshold = c(1, 1.1, 1.25, 1.5)
Nboot = 100

# rasters of case and population data
lemRaster = rasterPartition(polyCoarse = kentuckyCounty,
							polyFine = kentuckyTract,
							cellsCoarse = cellsCoarse,
							cellsFine = cellsFine,
							bw = bw,
							ncores = ncores,
							path = path,
							idFile = 'lemId.grd',
							offsetFile = 'lemOffsets.grd',
							verbose = TRUE)

# smoothing matrix
lemSmoothMat = smoothingMatrix(rasterObjects = lemRaster,
								ncores = ncores,
								path = path,
								filename = 'lemSmoothMat.grd',
								verbose = TRUE)

# risk estimation for bandwidth of 10km
lemRisk = riskEst(cases = kentuckyCounty[,c('id','count')],
					lemObjects = lemSmoothMat,
					bw = bw[1],
					fact = 1,
					ncores = ncores,
					path = path,
					filename = 'lemRisk.grd',
					verbose = TRUE)

# exceedance probabilities for bandwidth of 10km
lemExcProb = excProb(lemObjects = lemRisk,
				  	threshold = threshold,
				  	Nboot = Nboot,
					bw = bw[1],
					fact = 1,
             		ncores = ncores,
             		path = path,
				  	filename = 'lemExcProb.grd',
             		verbose = TRUE)

# plot exceedance probabilities
pCol = mapmisc::colourScale(lemExcProb$excProb,
					breaks = c(0,0.2,0.8,0.95,1),
					style = 'fixed', dec = 2,
					col = c('green','yellow','orange','red'))

par(mfrow = c(2,2), mar = c(0.5,0.5,3,0.5))
for(inT in 1:length(threshold)) {
	plot(lemExcProb$excProb[[inT]],
		main = paste('Exc Prob, t=', threshold[inT], ' (bw=10km)', sep = ''),
		col = pCol$col, breaks = pCol$breaks,
		axes = FALSE, box = FALSE, legend = FALSE,
		add = FALSE)
}
mapmisc::legendBreaks('topright', pCol)
}

}
