% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lemEstFun.R
\name{riskEst}
\alias{riskEst}
\title{Computes the relative risk estimation on the raster of fine polygons}
\usage{
riskEst(x, lemObjects, bw, tol = 1e-06, maxIter = 2000)
}
\arguments{
\item{x}{Spatial polygons of case data}

\item{lemObjects}{List of arrays for the smoothing matrix, and raster stacks for the partition and smoothed offsets}

\item{bw}{Bandwidth specifying which smoothing matrix in \code{lemObjects} to use}

\item{tol}{Tolerance for convergence}

\item{maxIter}{Maximum number of iterations for convergence}

\item{ncores}{Number of cores/threads for parallel processing}

\item{filename}{Passed to writeRaster}
}
\value{
The \code{riskEst} function returns a raster of risk estimations for the input bandwidth.
}
\description{
The \code{riskEst} function computes the estimations of the relative risk on the cells of the fine raster.
}
\details{
After using the \code{riskEst} function, the risk estimations are computed on the raster cells of the fine polygons.
}
\examples{
\dontrun{ 
data(kentuckyCounty)
data(kentuckyTract)

ncores = 1 + (.Platform$OS.type == 'unix')

lemRaster = rasterPartition(polyCoarse = kentuckyCounty, 
                           polyFine = kentuckyTract, 
                           cellsCoarse = 6, 
                           cellsFine = 100, 
                           bw = c(10, 12, 15, 17, 20, 25) * 1000, 
                           ncores = ncores, 
                           idFile = 'id.grd', 
                           offsetFile = 'offset.grd', 
                           verbose = TRUE)


lemSmoothMat = smoothingMatrix(rasterObjects = lemRaster, 
                               ncores = ncores, 
                               verbose = TRUE)

lemCv = lemXv(x = kentuckyCounty, 
             lemObjects = lemSmoothMat, 
             Nxv = 5, 
             ncores = ncores, 
             verbose = TRUE)
bestBw = lemCv$bw[which.min(lemCv$cv)]

lemRisk = riskEst(x = kentuckyCounty, 
                 lemObjects = lemSmoothMat, 
                 bw = bestBw, 
                 ncores = ncores)

rCol = mapmisc::colourScale(lemRisk, 
                           breaks = 10, style = 'equal', dec = 1)
plot(lemRisk, 
    col = rCol$col, breaks = rCol$breaks, 
    legend = TRUE)
}

}
